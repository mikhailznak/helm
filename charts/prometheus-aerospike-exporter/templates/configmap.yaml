apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-aerospike-exporter
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "prometheus-aerospike-exporter.labels" . | nindent 4 }}
data:
  ape.toml: |
    [Agent]
    # File paths should be double quoted.
    # Certificate file for the metric servers for prometheus
    cert_file = {{ .Values.exporter.agentCertFile | default "" | quote }}

    # Key file for the metric servers for prometheus
    key_file = {{ .Values.exporter.agentKeyFile | default "" | quote }}

    # labels to add to the prometheus metrics for e.g. labels={zone="asia-south1-a", platform="google compute engine"}
    labels = { {{ .Values.exporter.metricLabels }} }

    bind = "{{ .Values.exporter.agentBindHost | default "" }}:{{ .Values.exporter.agentBindPort | default 9145 }}"

    # metrics server timeout in seconds
    timeout = {{ .Values.exporter.agentTimeout | default 10 }}

    # Exporter logging configuration
    # Log file path (optional, logs to console by default)
    # Level can be info|warning,warn|error,err|debug|trace ('info' by default)
    log_file = {{ .Values.exporter.agentLogFile | default "" | quote }}
    log_level = {{ .Values.exporter.agentLogLevel | default "info" | quote }}

    # Basic HTTP authentication for '/metrics'.
    basic_auth_username={{ .Values.exporter.httpBasicAuthUsername | default "" | quote }}
    basic_auth_password={{ .Values.exporter.httpBasicAuthPassword | default "" | quote }}

    [Aerospike]
    db_host={{ .Values.exporter.aerospikeNode | default "localhost" | quote }}
    db_port={{ .Values.exporter.aerospikePort | default 3000 }}

    # certificate file
    # cert_file="${AS_CERT_FILE}"

    # key file
    # key_file="${AS_KEY_FILE}"

    # Passphrase for encrypted key_file. Supports below formats,
    # 1. Passphrase directly                 - "<passphrase>"
    # 2. Passphrase via file                 - "file:<file-that-contains-passphrase>"
    # 3. Passphrase via environment variable - "env:<environment-variable-that-holds-passphrase>"
    # key_file_passphrase="${AS_KEY_FILE_PASSPHRASE}"

    # node TLS name for authentication
    # node_tls_name="${AS_NODE_TLS_NAME}"

    # root certificate file
    # root_ca="${AS_ROOT_CA}"

    # authentication mode: internal (for server), external (LDAP, etc.)
    auth_mode={{ .Values.exporter.authMode | default "internal" | quote }}

    # database user
    user={{ .Values.exporter.authUser | default "" | quote }}

    # database password
    password={{ .Values.exporter.authPassword | default "" | quote }}

    # timeout for sending commands to the server node in seconds
    timeout={{ .Values.exporter.infoTimeout | default 5 }}

    # Metrics Allowlist - If specified, only these metrics will be scraped. An empty list will exclude all metrics.
    # Commenting out the below allowlist configs will disable metrics filtering (i.e. all metrics will be scraped).

    # Namespace metrics allowlist
    namespace_metrics_allowlist=[{{ .Values.exporter.namespaceMetricsAllowlist | default "" | quote }}]

    # Set metrics allowlist
    set_metrics_allowlist=[{{ .Values.exporter.setMetricsAllowlist | default "" | quote }}]

    # Node metrics allowlist
    node_metrics_allowlist=[{{ .Values.exporter.nodeMetricsAllowlist | default "" | quote }}]

    # XDR metrics allowlist (only for Aerospike versions 5.0 and above)
    # xdr_metrics_allowlist=[${XDR_METRICS_ALLOWLIST}]

    # Metrics Blocklist - If specified, these metrics will be NOT be scraped.

    # Namespace metrics blocklist
    # namespace_metrics_blocklist=[${NAMESPACE_METRICS_BLOCKLIST}]

    # Set metrics blocklist
    # set_metrics_blocklist=[${SET_METRICS_BLOCKLIST}]

    # Node metrics blocklist
    # node_metrics_blocklist=[${NODE_METRICS_BLOCKLIST}]

    # XDR metrics blocklist (only for Aerospike versions 5.0 and above)
    # xdr_metrics_blocklist=[${XDR_METRICS_BLOCKLIST}]