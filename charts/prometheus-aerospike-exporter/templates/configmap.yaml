{{- range $k, $v := .Values.exporter }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $.Release.Name }}-aerospike-exporter-{{ $v.name }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "prometheus-aerospike-exporter.labels" $ | nindent 4 }}
data:
  ape.toml: |
    [Agent]
    cert_file = {{ $v.agentCertFile | default "" | quote }}
    key_file = {{ $v.agentKeyFile | default "" | quote }}
    labels = { {{ $v.metricLabels }} }
    bind = "{{ $v.agentBindHost | default "" }}:{{ $v.agentBindPort | default 9145 }}"
    timeout = {{ $v.agentTimeout | default 10 }}
    log_file = {{ $v.agentLogFile | default "" | quote }}
    log_level = {{ $v.agentLogLevel | default "info" | quote }}
    basic_auth_username={{ $v.httpBasicAuthUsername | default "" | quote }}
    basic_auth_password={{ $v.httpBasicAuthPassword | default "" | quote }}
    [Aerospike]
    db_host={{ $v.aerospikeNode | default "localhost" | quote }}
    db_port={{ $v.aerospikePort | default 3000 }}

    # certificate file
    # cert_file="${AS_CERT_FILE}"

    # key file
    # key_file="${AS_KEY_FILE}"

    # Passphrase for encrypted key_file. Supports below formats,
    # 1. Passphrase directly                 - "<passphrase>"
    # 2. Passphrase via file                 - "file:<file-that-contains-passphrase>"
    # 3. Passphrase via environment variable - "env:<environment-variable-that-holds-passphrase>"
    # key_file_passphrase="${AS_KEY_FILE_PASSPHRASE}"

    # node TLS name for authentication
    # node_tls_name="${AS_NODE_TLS_NAME}"

    # root certificate file
    # root_ca="${AS_ROOT_CA}"

    # authentication mode: internal (for server), external (LDAP, etc.)
    auth_mode={{ $v.authMode | default "internal" | quote }}

    # database user
    user={{ $v.authUser | default "" | quote }}

    # database password
    password={{ $v.authPassword | default "" | quote }}

    # timeout for sending commands to the server node in seconds
    timeout={{ $v.infoTimeout | default 5 }}

    namespace_metrics_allowlist=[{{ $v.namespaceMetricsAllowlist | default "" | quote }}]
    set_metrics_allowlist=[{{ $v.setMetricsAllowlist | default "" | quote }}]
    node_metrics_allowlist=[{{ $v.nodeMetricsAllowlist | default "" | quote }}]

    # XDR metrics allowlist (only for Aerospike versions 5.0 and above)
    # xdr_metrics_allowlist=[${XDR_METRICS_ALLOWLIST}]

    # Namespace metrics blocklist
    # namespace_metrics_blocklist=[${NAMESPACE_METRICS_BLOCKLIST}]

    # Set metrics blocklist
    # set_metrics_blocklist=[${SET_METRICS_BLOCKLIST}]

    # Node metrics blocklist
    # node_metrics_blocklist=[${NODE_METRICS_BLOCKLIST}]

    # XDR metrics blocklist (only for Aerospike versions 5.0 and above)
    # xdr_metrics_blocklist=[${XDR_METRICS_BLOCKLIST}]
{{- end }}